#pragma once

#include <Wyvern/Assets/iResource.h>

///////////////////////////////////////////////////////////////////////////////////////

namespace wv
{

///////////////////////////////////////////////////////////////////////////////////////

	class cTextureObject : public iResource
	{

	public:

		 cTextureObject( void ) : iResource() { }
		~cTextureObject( void );

///////////////////////////////////////////////////////////////////////////////////////

		void load  ( std::string _path ) override;
		void create( void ) override;
		void bind( void );

///////////////////////////////////////////////////////////////////////////////////////

		const int getWidth   ( void ) const { return m_width; }
		const int getHeight  ( void ) const { return m_height; }
		const float getAspect( void ) const { return m_aspect; }

///////////////////////////////////////////////////////////////////////////////////////

	private:

		unsigned int m_handle = 0;
		unsigned char* m_data = 0;
		int m_width  = 0;
		int m_height = 0;
		float m_aspect = 1.0f;
		int m_nrChannels = 0;

	};

///////////////////////////////////////////////////////////////////////////////////////

}