#pragma once

#include <Wyvern/Assets/iResource.h>
#include <Wyvern/Assets/cMaterial.h>
#include <Wyvern/Assets/cMesh.h>
#include <Wyvern/Math/Vector3.h>

namespace wv
{

///////////////////////////////////////////////////////////////////////////////////////

	class cModel : public iResource
	{

	public:

		 cModel( void );
		~cModel( void );

///////////////////////////////////////////////////////////////////////////////////////

		void load  ( std::string _path ) override;
		void create( void ) override;

///////////////////////////////////////////////////////////////////////////////////////

		void setPosition( cVector3f _position );
		void setRotation( cVector3f _euler );
		void setScale   ( cVector3f _scale );

///////////////////////////////////////////////////////////////////////////////////////

		void move( cVector3f _value );
		void rotate( cVector3f _euler );

///////////////////////////////////////////////////////////////////////////////////////

		cMaterial& getMaterial( void ) { return m_material; }

///////////////////////////////////////////////////////////////////////////////////////

		void render( void );

///////////////////////////////////////////////////////////////////////////////////////

	private:

		cVector3f m_position{ 0.0f, 0.0f, 0.0f };
		cVector3f m_rotation{ 0.0f, 0.0f, 0.0f };
		cVector3f m_scale   { 1.0f, 1.0f, 1.0f };

		std::vector<cMesh*> m_meshes;
		
		cMaterial m_material;

	};

///////////////////////////////////////////////////////////////////////////////////////

}