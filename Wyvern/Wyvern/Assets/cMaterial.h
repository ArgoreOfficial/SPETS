#pragma once

#include <Wyvern/Assets/cResourceHandle.h>
#include <Wyvern/Renderer/Framework/cShaderProgram.h>
#include <Wyvern/Renderer/Framework/cTextureObject.h>

///////////////////////////////////////////////////////////////////////////////////////

namespace wv
{

///////////////////////////////////////////////////////////////////////////////////////

	class cMaterial
	{
	public:
		
		 cMaterial();
		~cMaterial();

///////////////////////////////////////////////////////////////////////////////////////

		void loadTexture( std::string _path );

		void load  ( void );
		void create( void );
		void use   ( void );

///////////////////////////////////////////////////////////////////////////////////////

		cShaderProgram& getShader ( void ) { return m_shader; }
		cTextureObject* getTexture( void ) { return m_texture; }

///////////////////////////////////////////////////////////////////////////////////////

	private:

		cShaderSource m_vertSource;
		cShaderSource m_fragSource;

		bool m_hasTexture = false;
		std::string m_texturePath = "";

		tTextureHandle m_textureHandle;
		cTextureObject* m_texture = nullptr;
		cShaderProgram m_shader;

	};

///////////////////////////////////////////////////////////////////////////////////////

}